diff --git a/RELEASE_NOTES.rst b/RELEASE_NOTES.rst
index 3e0c139..d40110c 100644
--- a/RELEASE_NOTES.rst
+++ b/RELEASE_NOTES.rst
@@ -1,6 +1,14 @@
 Release notes
 =============
 
+0.31.0
+------
+
+* Add ``doc-tools-build-rst`` to build RST guides.
+* Update sitemap to silence warnings.
+* Enhance ``openstack-auto-commands`` for new commands and releases.
+* Update ``autohelp.py`` for Liberty release.
+
 0.30.1
 ------
 
diff --git a/autogenerate_config_docs/autohelp.py b/autogenerate_config_docs/autohelp.py
index 317b9e6..1963b99 100755
--- a/autogenerate_config_docs/autohelp.py
+++ b/autogenerate_config_docs/autohelp.py
@@ -43,17 +43,24 @@ EXTENSIONS = ['oslo.cache',
               'oslo.service']
 
 IGNORE = [
-    'trove.guestagent.datastore.postgresql.manager',
-    'trove.guestagent.datastore.postgresql.service.root',
-    'trove.guestagent.datastore.postgresql.service.users',
-    'trove.guestagent.datastore.postgresql.service.database',
+    'cinder.wsgi.wsgi',
+    'designate.api.v1.extensions.quotas',
+    'designate.api.v1.extensions.reports',
+    'designate.api.v1.extensions.sync',
+    'designate.api.v1.extensions.touch',
+    'glance.contrib.plugins.artifacts_sample.setup',
+    'glance.contrib.plugins.image_artifact.setup',
+    'manila.db.migrations.alembic.env',
+    'neutron.plugins.ml2.drivers.cisco.nexus.type_nexus_vxlan',
     'trove.guestagent.datastore.experimental.postgresql.manager',
     'trove.guestagent.datastore.experimental.postgresql.service.database',
     'trove.guestagent.datastore.experimental.postgresql.service.root',
     'trove.guestagent.datastore.experimental.postgresql.service.users',
-    'glance.contrib.plugins.image_artifact.setup',
-    'glance.contrib.plugins.artifacts_sample.setup',
-    'neutron.plugins.ml2.drivers.cisco.nexus.type_nexus_vxlan'
+    'trove.guestagent.datastore.postgresql.manager',
+    'trove.guestagent.datastore.postgresql.service.database',
+    'trove.guestagent.datastore.postgresql.service.root',
+    'trove.guestagent.datastore.postgresql.service.users',
+    'zaqar.transport.wsgi.app'
 ]
 
 
diff --git a/autogenerate_config_docs/diff_branches.py b/autogenerate_config_docs/diff_branches.py
index b310688..cdd8ae3 100755
--- a/autogenerate_config_docs/diff_branches.py
+++ b/autogenerate_config_docs/diff_branches.py
@@ -257,7 +257,7 @@ def generate_docbook(project, new_branch, old_list, new_list):
                                  "lives in the openstack-doc-tools "
                                  "repository. "))
     title = etree.Element("title")
-    title.text = ("New, updated and deprecated options "
+    title.text = ("New, updated, and deprecated options "
                   "in %(release)s for %(project)s" %
                   {'release': release,
                    'project': CODENAME_TITLE[project]})
@@ -305,7 +305,7 @@ def generate_docbook(project, new_branch, old_list, new_list):
     # No new, updated and deprecated options
     if not new_opts and not changed_default and not deprecated_opts:
         para = etree.Element("para")
-        para.text = ("There are no new, updated and deprecated options "
+        para.text = ("There are no new, updated, and deprecated options "
                      "in %(release)s for %(project)s." %
                      {'release': release,
                       'project': CODENAME_TITLE[project]})
diff --git a/autogenerate_config_docs/hooks.py b/autogenerate_config_docs/hooks.py
index 25ed27d..9b89430 100644
--- a/autogenerate_config_docs/hooks.py
+++ b/autogenerate_config_docs/hooks.py
@@ -18,10 +18,16 @@ call to _register_runtime_opts(). The HOOKS dict associate hook functions with
 a module path."""
 
 
-def keystone_config():
-    from keystone.common import config
+def aodh_config():
+    # Aodh uses a local conf object, therefore we need to use the same method
+    # here to populate the global cfg.CONF object used by the script.
+    import aodh.opts as opts
+    from oslo_config import cfg
 
-    config.configure()
+    cfg.CONF = cfg.ConfigOpts()
+    for group, options in opts.list_opts():
+        cfg.CONF.register_opts(list(options),
+                               group=None if group == "DEFAULT" else group)
 
 
 def glance_store_config():
@@ -35,6 +41,12 @@ def glance_store_config():
         pass
 
 
+def keystone_config():
+    from keystone.common import config
+
+    config.configure()
+
+
 def neutron_misc():
     try:
         # These imports are needed for kilo only
@@ -62,7 +74,8 @@ def nova_spice():
     import nova.cmd.spicehtml5proxy  # noqa
 
 
-HOOKS = {'keystone.common.config': keystone_config,
+HOOKS = {'aodh': aodh_config,
          'glance.common.config': glance_store_config,
+         'keystone.common.config': keystone_config,
          'neutron': neutron_misc,
          'nova.spice': nova_spice}
diff --git a/autogenerate_config_docs/requirements/neutron-kilo.txt b/autogenerate_config_docs/requirements/neutron-kilo.txt
index 8cbe079..2cc4b70 100644
--- a/autogenerate_config_docs/requirements/neutron-kilo.txt
+++ b/autogenerate_config_docs/requirements/neutron-kilo.txt
@@ -39,5 +39,5 @@ neutron_radware_lbaas_v2
 -e git+https://git.openstack.org/openstack/networking-plumgrid.git#egg=networking-plumgrid
 -e git+https://git.openstack.org/stackforge/networking-portforwarding.git#egg=networking-portforwarding
 -e git+https://git.openstack.org/openstack/networking-vsphere.git@stable/kilo#egg=networking-vsphere
--e git+https://git.openstack.org/stackforge/neutron-powervm.git#egg=neutron-powervm
+-e git+https://git.openstack.org/openstack/networking-powervm.git#egg=networking-powervm
 -e git+https://git.openstack.org/openstack/vmware-nsx.git@stable/kilo#egg=vmware-nsx
diff --git a/autogenerate_config_docs/requirements/neutron-master.txt b/autogenerate_config_docs/requirements/neutron-master.txt
index 556a562..d9680eb 100644
--- a/autogenerate_config_docs/requirements/neutron-master.txt
+++ b/autogenerate_config_docs/requirements/neutron-master.txt
@@ -28,7 +28,13 @@ neutron_radware_lbaas_v2
 -e git+https://git.openstack.org/stackforge/networking-hyperv.git#egg=networking-hyperv
 -e git+https://git.openstack.org/stackforge/networking-ibm.git#egg=networking-ibm
 -e git+https://git.openstack.org/openstack/networking-l2gw.git#egg=networking-l2gw
-# pip dependency installation failure
+-e git+https://git.openstack.org/openstack/networking-sfc.git#egg=networking-sfc
+-e git+https://git.openstack.org/openstack/networking-infoblox.git#egg=networking-infoblox
+-e git+https://git.openstack.org/openstack/networking-fujitsu.git#egg=networking-fujitsu
+-e git+https://git.openstack.org/openstack/networking-onos.git#egg=networking-onos
+-e git+https://git.openstack.org/openstack/networking-calico.git#egg=networking-calico
+-e git+https://git.openstack.org/openstack/networking-ale-omniswitch.git#egg=networking-ale-omniswitch
+#-e git+https://git.openstack.org/openstack/networking-lenovo.git#egg=networking-lenovo
 -e git+https://git.openstack.org/openstack/networking-midonet.git#egg=networking-midonet
 -e git+https://git.openstack.org/stackforge/networking-mlnx.git#egg=networking-mlnx
 -e git+https://git.openstack.org/stackforge/networking-nec.git#egg=networking-nec
@@ -39,5 +45,7 @@ neutron_radware_lbaas_v2
 -e git+https://git.openstack.org/openstack/networking-plumgrid.git#egg=networking-plumgrid
 -e git+https://git.openstack.org/stackforge/networking-portforwarding.git#egg=networking-portforwarding
 -e git+https://git.openstack.org/openstack/networking-vsphere.git#egg=networking-vsphere
--e git+https://git.openstack.org/stackforge/neutron-powervm.git#egg=neutron-powervm
+-e git+https://git.openstack.org/openstack/networking-powervm.git#egg=networking-powervm
 -e git+https://git.openstack.org/openstack/vmware-nsx.git#egg=vmware-nsx
+-e git+https://git.openstack.org/stackforge/networking-zvm.git#egg=networking-zvm
+-e git+https://git.openstack.org/stackforge/networking-6wind.git#egg=networking-6wind
diff --git a/bin/doc-tools-build-rst b/bin/doc-tools-build-rst
new file mode 100755
index 0000000..488b123
--- /dev/null
+++ b/bin/doc-tools-build-rst
@@ -0,0 +1,99 @@
+#!/bin/bash -e
+#
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+DIRECTORY=$1
+
+if [ -z "$DIRECTORY" ] ; then
+    echo "usage $0 DIRECTORY options"
+    echo "Options are:"
+    echo "--glossary: Build glossary"
+    echo "--tag TAG: Use given tag for building"
+    echo "--target TARGET: Copy files to publish-docs/$TARGET"
+    echo "--build BUILD: Name of build directory"
+    echo "--linkcheck: Check validity of links instead of building"
+    exit 1
+fi
+
+GLOSSARY=0
+TARGET=""
+TAG=""
+TAG_OPT=""
+BUILD=""
+LINKCHECK=""
+
+while [[ $# > 0 ]] ; do
+    option="$1"
+    case $option in
+        --build)
+            BUILD="$2"
+            shift
+            ;;
+        --linkcheck)
+            LINKCHECK=1
+            ;;
+        --glossary)
+            GLOSSARY=1
+            ;;
+        --tag)
+            TAG="$2"
+            TAG_OPT="-t $2"
+            shift
+            ;;
+        --target)
+            TARGET="$2"
+            shift
+            ;;
+    esac
+    shift
+done
+
+
+if [ "$GLOSSARY" -eq "1" ] ; then
+    echo "Generating Glossary"
+    tools/glossary2rst.py doc/common-rst/glossary.rst
+fi
+
+if [ -z "$BUILD" ] ; then
+    if [ -z "$TAG" ] ; then
+        BUILD_DIR="$DIRECTORY/build/html"
+    else
+        BUILD_DIR="$DIRECTORY/build-${TAG}/html"
+    fi
+else
+    BUILD_DIR="$DIRECTORY/$BUILD/html"
+fi
+
+if [ -z "$TAG" ] ; then
+    echo "Checking $DIRECTORY..."
+else
+    echo "Checking $DIRECTORY with tag $TAG..."
+fi
+
+if [ "$LINKCHECK" = "1" ] ; then
+    # Show sphinx-build invocation for easy reproduction
+    set -x
+    sphinx-build -E -W -b linkcheck $TAG_OPT $DIRECTORY/source $BUILD_DIR
+    set +x
+else
+    # Show sphinx-build invocation for easy reproduction
+    set -x
+    sphinx-build -E -W -b html $TAG_OPT $DIRECTORY/source $BUILD_DIR
+    set +x
+
+    # Copy RST
+    if [ "$TARGET" != "" ] ; then
+        mkdir -p publish-docs/$TARGET
+        rsync -a $BUILD_DIR/ publish-docs/$TARGET/
+    fi
+fi
diff --git a/bin/doc-tools-update-cli-reference b/bin/doc-tools-update-cli-reference
index dcad003..7b00fbf 100755
--- a/bin/doc-tools-update-cli-reference
+++ b/bin/doc-tools-update-cli-reference
@@ -70,4 +70,4 @@ git branch --list $branch && git branch -D $branch
 git checkout -b $branch
 mv ../output/ch_cli_${project}_commands.xml doc/cli-reference/generated
 version=$($project --version 2>&1)
-git commit -a -m "Update CLI reference for python-${project}client $version"
+git commit -a -m "Update CLI reference for python-${project}client ${version##* }"
diff --git a/os_doc_tools/commands.py b/os_doc_tools/commands.py
index 07be385..16acc52 100644
--- a/os_doc_tools/commands.py
+++ b/os_doc_tools/commands.py
@@ -497,20 +497,18 @@ def generate_subcommand(os_command, os_subcommand, os_file, extra_params,
     os_file.write("    </section>\n")
 
 
-def generate_subcommands(os_command, os_file, subcommands, extra_params,
-                         suffix, title_suffix):
-    """Convert os_command help subcommands for all subcommands to DocBook.
+def discover_subcommands(os_command, subcommands, extra_params):
+    """Discover all help subcommands for the given command"
 
-    :param os_command: client command to document
-    :param os_file:    open filehandle for output of DocBook file
+    :param os_command: client command whose subcommands need to be discovered
     :param subcommands: list or type ('complete' or 'bash-completion')
                         of subcommands to document
     :param extra_params: Extra parameter to pass to os_command.
-    :param suffix: Extra suffix to add to xml:id
-    :param title_suffix: Extra suffix for title
+    :return: the list of subcommands discovered
+    :rtype: list(str)
     """
-
-    print("Documenting '%s' subcommands..." % os_command)
+    print(("Discovering subcommands of '%s' %s ..."
+          % (os_command, extra_params)))
     blacklist = ['bash-completion', 'complete', 'help']
     if type(subcommands) is str:
         args = [os_command]
@@ -531,16 +529,50 @@ def generate_subcommands(os_command, os_file, subcommands, extra_params,
             args.append('bash-completion')
             subcommands = subprocess.check_output(
                 args,
-                universal_newlines=True).strip().split()
+                universal_newlines=True).strip().split('\n')[-1].split()
 
     subcommands = sorted([o for o in subcommands if not (o.startswith('-') or
                                                          o in blacklist)])
+
+    print("%d subcommands discovered." % len(subcommands))
+    return subcommands
+
+
+def generate_subcommands(os_command, os_file, subcommands, extra_params,
+                         suffix, title_suffix):
+    """Convert os_command help subcommands for all subcommands to DocBook.
+
+    :param os_command: client command to document
+    :param os_file:    open filehandle for output of DocBook file
+    :param subcommands: list or type ('complete' or 'bash-completion')
+                        of subcommands to document
+    :param extra_params: Extra parameter to pass to os_command.
+    :param suffix: Extra suffix to add to xml:id
+    :param title_suffix: Extra suffix for title
+    """
     for subcommand in subcommands:
         generate_subcommand(os_command, subcommand, os_file, extra_params,
                             suffix, title_suffix)
     print("%d subcommands documented." % len(subcommands))
 
 
+def discover_and_generate_subcommands(os_command, os_file, subcommands,
+                                      extra_params, suffix, title_suffix):
+    """Convert os_command help subcommands for all subcommands to DocBook.
+
+    :param os_command: client command to document
+    :param os_file:    open filehandle for output of DocBook file
+    :param subcommands: list or type ('complete' or 'bash-completion')
+                        of subcommands to document
+    :param extra_params: Extra parameter to pass to os_command.
+    :param suffix: Extra suffix to add to xml:id
+    :param title_suffix: Extra suffix for title
+    """
+    subcommands = discover_subcommands(os_command, subcommands, extra_params)
+    generate_subcommands(os_command, os_file, subcommands, extra_params,
+                         suffix, title_suffix)
+
+
 def generate_end(os_file):
     """Finish writing file.
 
@@ -588,20 +620,31 @@ def document_single_project(os_command, output_dir):
         out_file.write("""
     <section xml:id=\"cinder_cli_v1\">
        <title>Block Storage API v1 commands</title>\n""")
-    if os_command == 'glance':
+        discover_and_generate_subcommands(os_command, out_file, subcommands,
+                                          None, "", "")
+    elif os_command == 'openstack':
+        out_file.write("""
+    <section xml:id=\"openstack_cli_identity_api_v2\">
+       <title>OpenStack with Identity API v2 commands</title>\n""")
+        auth_type_token = ["--os-auth-type", "token"]
+        identity_api_v2 = ["--os-identity-api-version", "2"]
+        extra_params = auth_type_token + identity_api_v2
+        subcommands_v2 = discover_subcommands(os_command, subcommands,
+                                              extra_params)
+        generate_subcommands(os_command, out_file, subcommands_v2,
+                             extra_params, "_with_identity_api_v2", "")
+    elif os_command == 'glance':
         out_file.write("""
     <section xml:id=\"glance_cli_v1\">
        <title>Image service API v1 commands</title>\n""")
-    if os_command == 'murano':
-        out_file.write("""
-    <section xml:id=\"murano_cli_v1\">
-       <title>Application catalog API v1 commands</title>\n""")
-    if os_command == 'openstack':
-        generate_subcommands(os_command, out_file, subcommands,
-                             ["--os-auth-type", "token"], "", "")
+        discover_and_generate_subcommands(os_command, out_file, subcommands,
+                                          ["--os-image-api-version", "1"],
+                                          "_v1", " (v1)")
     else:
-        generate_subcommands(os_command, out_file, subcommands, None, "", "")
+        discover_and_generate_subcommands(os_command, out_file, subcommands,
+                                          None, "", "")
 
+    # Print subcommands for different API versions
     if os_command == 'cinder':
         out_file.write("    </section>\n")
         out_file.write("""
@@ -615,8 +658,38 @@ def document_single_project(os_command, output_dir):
                        "export OS_VOLUME_API_VERSION=2</userinput></screen>\n"
                        "</para>\n")
 
-        generate_subcommands(os_command, out_file, subcommands,
-                             ["--os-volume-api-version", "2"], "_v2", " (v2)")
+        discover_and_generate_subcommands(os_command, out_file, subcommands,
+                                          ["--os-volume-api-version", "2"],
+                                          "_v2", " (v2)")
+        out_file.write("    </section>\n")
+    if os_command == 'openstack':
+        # Print the additional subcommands possible by using v3 of identity API
+        out_file.write("""
+    </section>\n
+    <section xml:id=\"openstack_cli_with_identity_api_v3\">
+       <title>OpenStack with Identity API v3 commands (diff)</title>
+    <para>
+       You can select the Identity API version to use by adding the
+       <parameter>--os-identity-api-version</parameter> parameter or by setting
+       the corresponding environment variable:\n""")
+        out_file.write("<screen><prompt>$</prompt> <userinput>"
+                       "export OS_IDENTITY_API_VERSION=3</userinput>"
+                       "</screen>\n</para>\n")
+        out_file.write("<para>\n"
+                       "This section documents only the difference in"
+                       " subcommands available for the openstack client when"
+                       " the identity API version is changed from v2 to v3.\n"
+                       "</para>\n")
+
+        identity_api_v3 = ["--os-identity-api-version", "3"]
+        extra_params = auth_type_token + identity_api_v3
+        subcommands_v3 = discover_subcommands(os_command, subcommands,
+                                              extra_params)
+        subcommands_delta = sorted(list(set(subcommands_v3) -
+                                        set(subcommands_v2)))
+        generate_subcommands(os_command, out_file, subcommands_delta,
+                             extra_params, "_with_identity_api_v3",
+                             " (Identity API v3)")
         out_file.write("    </section>\n")
     if os_command == 'glance':
         out_file.write("""
@@ -631,8 +704,9 @@ def document_single_project(os_command, output_dir):
                        "export OS_IMAGE_API_VERSION=2</userinput></screen>\n"
                        "</para>\n")
 
-        generate_subcommands(os_command, out_file, subcommands,
-                             ["--os-image-api-version", "2"], "_v2", " (v2)")
+        discover_and_generate_subcommands(os_command, out_file, subcommands,
+                                          ["--os-image-api-version", "2"],
+                                          "_v2", " (v2)")
         out_file.write("    </section>\n")
 
     generate_end(out_file)
diff --git a/os_doc_tools/resources/clients.yaml b/os_doc_tools/resources/clients.yaml
index 2476cff..4a574ff 100644
--- a/os_doc_tools/resources/clients.yaml
+++ b/os_doc_tools/resources/clients.yaml
@@ -13,6 +13,8 @@ designate:
 glance:
     name: OpenStack Image service
     title: Image service
+gnocchi:
+    name: A time series storage and resources index service
 heat:
     name: Orchestration
 ironic:
@@ -23,8 +25,6 @@ keystone:
 neutron:
     name: OpenStack Networking
     title: Networking
-magnetodb:
-    name: Key-Value Store as a Service
 magnum:
     name: Containers service
 manila:
@@ -78,6 +78,8 @@ trove-manage:
     title: Database service management
     subcommands:
       - datastore_update
+      - datastore_version_flavor_add
+      - datastore_version_flavor_delete
       - datastore_version_update
       - db_downgrade
       - db_load_datastore_config_parameters
diff --git a/requirements.txt b/requirements.txt
index 1d0ed5e..dcd529a 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -2,12 +2,12 @@
 # of appearance. Changing the order has an impact on the overall integration
 # process, which may cause wedges in the gate later.
 
-pbr<2.0,>=1.4
+pbr>=1.6
 argparse
 Babel>=1.3
 iso8601>=0.1.9
 lxml>=2.3
-oslo.config>=2.1.0 # Apache-2.0
+oslo.config>=2.3.0 # Apache-2.0
 sphinx!=1.2.0,!=1.3b1,<1.3,>=1.1.2
 demjson # GNU LGPL 3.0
 PyYAML>=3.1.0
diff --git a/setup.cfg b/setup.cfg
index 4b8f181..d3f8df4 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -29,6 +29,7 @@ data_files =
 scripts =
     bin/doc-tools-check-languages
     bin/doc-tools-update-cli-reference
+    bin/doc-tools-build-rst
 
 [global]
 setup-hooks =
diff --git a/setup.py b/setup.py
index d8080d0..782bb21 100644
--- a/setup.py
+++ b/setup.py
@@ -25,5 +25,5 @@ except ImportError:
     pass
 
 setuptools.setup(
-    setup_requires=['pbr>=1.3'],
+    setup_requires=['pbr>=1.8'],
     pbr=True)
diff --git a/sitemap/README.rst b/sitemap/README.rst
index 7c47db7..42f5386 100644
--- a/sitemap/README.rst
+++ b/sitemap/README.rst
@@ -33,4 +33,4 @@ To install the needed modules you can use pip or the package management system i
 in your distribution. When using the package management system maybe the name of the
 packages differ. When using pip it's maybe necessary to install some development packages.
 
-    $ pip install scrapy
+    $ pip install -r requirements.txt
diff --git a/sitemap/generator/pipelines.py b/sitemap/generator/pipelines.py
index 7a8d446..f06d28a 100644
--- a/sitemap/generator/pipelines.py
+++ b/sitemap/generator/pipelines.py
@@ -14,10 +14,10 @@ import os
 
 import lxml
 import scrapy
-from scrapy.contrib import exporter
+from scrapy import exporters
 
 
-class SitemapItemExporter(exporter.XmlItemExporter):
+class SitemapItemExporter(exporters.XmlItemExporter):
     '''XmlItemExporer with adjusted attributes for the root element.'''
 
     def start_exporting(self):
diff --git a/sitemap/generator/settings.py b/sitemap/generator/settings.py
index a013c47..4bab668 100644
--- a/sitemap/generator/settings.py
+++ b/sitemap/generator/settings.py
@@ -27,6 +27,7 @@ ITEM_PIPELINES = {
 CONCURRENT_REQUESTS = 32
 CONCURRENT_REQUESTS_PER_DOMAIN = 32
 CONCURRENT_REQUESTS_PER_IP = 32
+DOWNLOAD_WARNSIZE = 67108864
 LOG_LEVEL = 'INFO'
 LOGGING_ENABLED = True
 RANDOMIZE_DOWNLOAD_DELAY = False
diff --git a/sitemap/generator/spiders/sitemap.py b/sitemap/generator/spiders/sitemap.py
index e81335b..5ea6371 100644
--- a/sitemap/generator/spiders/sitemap.py
+++ b/sitemap/generator/spiders/sitemap.py
@@ -15,7 +15,7 @@ import time
 import urlparse
 
 from generator import items
-from scrapy.linkextractors import sgml
+from scrapy.linkextractors import LinkExtractor
 from scrapy import spiders
 
 
@@ -24,7 +24,7 @@ class SitemapSpider(spiders.CrawlSpider):
 
     rules = [
         spiders.Rule(
-            sgml.SgmlLinkExtractor(
+            LinkExtractor(
                 allow=[
                     r'.*\.html',
                     r'.*\.pdf',
diff --git a/sitemap/requirements.txt b/sitemap/requirements.txt
new file mode 100644
index 0000000..dc26478
--- /dev/null
+++ b/sitemap/requirements.txt
@@ -0,0 +1 @@
+scrapy>=1.0.0
